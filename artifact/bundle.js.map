{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://mag-variable-update/./src/function.ts","webpack://mag-variable-update/./src/main.ts","webpack://mag-variable-update/./src/variable_init.ts","webpack://mag-variable-update/webpack/bootstrap","webpack://mag-variable-update/webpack/before-startup","webpack://mag-variable-update/webpack/startup","webpack://mag-variable-update/webpack/after-startup"],"sourcesContent":["import { variable_events } from './main';\r\n\r\nexport function trimQuotesAndBackslashes(str: string): string {\r\n    // Regular expression to match backslashes and quotes at the beginning and end\r\n    return str.replace(/^[\\\\\"' ]*(.*?)[\\\\\"' ]*$/, '$1');\r\n}\r\n\r\n/**\r\n * 从大字符串中提取所有 .set(${path}, ${new_value});//${reason} 格式的模式\r\n * 并解析出每个匹配项的路径、新值和原因部分\r\n */\r\ninterface SetCommand {\r\n    fullMatch: string;\r\n    path: string;\r\n    oldValue: string;\r\n    newValue: string;\r\n    reason: string;\r\n}\r\n\r\nfunction extractSetCommands(inputText: string): SetCommand[] {\r\n    const results: SetCommand[] = [];\r\n\r\n    // 首先匹配整个 _.set 调用\r\n    const pattern = /_\\.set\\(([\\s\\S]*?)\\);\\s*(?:\\/\\/(.*?))?(?:\\n|$|\\r)/g;\r\n\r\n    let match;\r\n    while ((match = pattern.exec(inputText)) !== null) {\r\n        const fullContent = match[0];\r\n        const paramsString = match[1]; // 括号内的所有内容\r\n        const comment = match[2] ? match[2].trim() : '';\r\n\r\n        // 手动解析参数，处理嵌套结构\r\n        const params = parseParameters(paramsString);\r\n\r\n        if (params.length >= 3) {\r\n            results.push({\r\n                fullMatch: fullContent,\r\n                path: trimQuotesAndBackslashes(params[0]),\r\n                oldValue: trimQuotesAndBackslashes(params[1]),\r\n                newValue: trimQuotesAndBackslashes(params[2]),\r\n                reason: comment,\r\n            });\r\n        }\r\n    }\r\n\r\n    return results;\r\n}\r\n\r\n// 解析参数字符串，处理嵌套结构\r\nfunction parseParameters(paramsString: string): string[] {\r\n    const params: string[] = [];\r\n    let currentParam = '';\r\n    let inQuote = false;\r\n    let quoteChar = '';\r\n    let bracketCount = 0;\r\n    let braceCount = 0;\r\n\r\n    for (let i = 0; i < paramsString.length; i++) {\r\n        const char = paramsString[i];\r\n\r\n        // 处理引号\r\n        if ((char === '\"' || char === \"'\") && (i === 0 || paramsString[i - 1] !== '\\\\')) {\r\n            if (!inQuote) {\r\n                inQuote = true;\r\n                quoteChar = char;\r\n            } else if (char === quoteChar) {\r\n                inQuote = false;\r\n            }\r\n        }\r\n\r\n        // 处理方括号 (数组)\r\n        if (char === '[') bracketCount++;\r\n        if (char === ']') bracketCount--;\r\n\r\n        // 处理花括号 (对象)\r\n        if (char === '{') braceCount++;\r\n        if (char === '}') braceCount--;\r\n\r\n        // 处理参数分隔符\r\n        if (char === ',' && !inQuote && bracketCount === 0 && braceCount === 0) {\r\n            params.push(currentParam.trim());\r\n            currentParam = '';\r\n            continue;\r\n        }\r\n\r\n        currentParam += char;\r\n    }\r\n\r\n    // 添加最后一个参数\r\n    if (currentParam.trim()) {\r\n        params.push(currentParam.trim());\r\n    }\r\n\r\n    return params;\r\n}\r\n\r\nexport async function getLastValidVariable(startNum: number): Promise<Record<string, any>> {\r\n    for (;;) {\r\n        if (startNum < 0) break;\r\n        var currentMsg = await getChatMessages(startNum);\r\n        if (currentMsg.length > 0) {\r\n            var variables = currentMsg[0].swipes_data[currentMsg[0].swipe_id];\r\n            if (_.has(variables, 'stat_data')) {\r\n                return variables;\r\n            }\r\n        }\r\n        --startNum;\r\n    }\r\n    return await getVariables();\r\n}\r\n\r\nfunction pathFix(path: string): string {\r\n    const segments = [];\r\n    let currentSegment = '';\r\n    let inQuotes = false;\r\n    let quoteChar = '';\r\n\r\n    for (let i = 0; i < path.length; i++) {\r\n        const char = path[i];\r\n\r\n        // Handle quotes\r\n        if ((char === '\"' || char === \"'\") && (i === 0 || path[i - 1] !== '\\\\')) {\r\n            if (!inQuotes) {\r\n                inQuotes = true;\r\n                quoteChar = char;\r\n            } else if (char === quoteChar) {\r\n                inQuotes = false;\r\n            } else {\r\n                currentSegment += char;\r\n            }\r\n        } else if (char === '.' && !inQuotes) {\r\n            segments.push(currentSegment);\r\n            currentSegment = '';\r\n        } else {\r\n            currentSegment += char;\r\n        }\r\n    }\r\n\r\n    if (currentSegment) {\r\n        segments.push(currentSegment);\r\n    }\r\n\r\n    return segments.join('.');\r\n}\r\n\r\nexport async function updateVariables(\r\n    current_message_content: string,\r\n    variables: any\r\n): Promise<boolean> {\r\n    var out_is_modifed = false;\r\n    await eventEmit(variable_events.VARIABLE_UPDATE_STARTED, variables, out_is_modifed);\r\n    var out_status: Record<string, any> = _.cloneDeep(variables);\r\n    var matched_set = extractSetCommands(current_message_content);\r\n    var variable_modified = false;\r\n    for (const setCommand of matched_set) {\r\n        var { path, newValue, reason } = setCommand;\r\n        path = pathFix(path);\r\n\r\n        if (_.has(variables.stat_data, path)) {\r\n            const currentValue = _.get(variables.stat_data, path);\r\n            //有时候llm会返回整个数组，处理它\r\n            if (\r\n                _.isString(newValue) &&\r\n                newValue.trim().startsWith('[') &&\r\n                newValue.trim().endsWith(']')\r\n            ) {\r\n                try {\r\n                    const parsedArray = JSON.parse(newValue);\r\n                    if (Array.isArray(parsedArray) && parsedArray.length > 0) {\r\n                        newValue = parsedArray[0];\r\n                    }\r\n                } catch (error: any) {\r\n                    console.error(`Error parsing JSON array for '${path}': ${error.message}`);\r\n                }\r\n            }\r\n            // Check the type of the current value\r\n            if (typeof currentValue === 'number') {\r\n                // If the current value is a number, convert the new value to a number\r\n                const newValueNumber = Number(newValue);\r\n                const oldValue = currentValue;\r\n                _.set(variables.stat_data, path, newValueNumber);\r\n                const reason_str = reason ? `(${reason})` : '';\r\n                const display_str = `${oldValue}->${newValueNumber} ${reason_str}`;\r\n                _.set(out_status.stat_data, path, display_str);\r\n                variable_modified = true;\r\n                console.info(`Set '${path}' to '${newValueNumber}' ${reason_str}`);\r\n                await eventEmit(\r\n                    variable_events.SINGLE_VARIABLE_UPDATED,\r\n                    variables.stat_data,\r\n                    path,\r\n                    oldValue,\r\n                    newValueNumber\r\n                );\r\n            } else if (Array.isArray(currentValue) && currentValue.length === 2) {\r\n                // If the current value is of type ValueWithDescription<T>\r\n                const newValueParsed =\r\n                    typeof currentValue[0] === 'number'\r\n                        ? Number(newValue)\r\n                        : trimQuotesAndBackslashes(newValue);\r\n                const oldValue = _.cloneDeep(currentValue[0]);\r\n                currentValue[0] = newValueParsed;\r\n                _.set(variables.stat_data, path, currentValue);\r\n                const reason_str = reason ? `(${reason})` : '';\r\n                const display_str = `${oldValue}->${newValue} ${reason_str}`;\r\n                _.set(out_status.stat_data, path, display_str);\r\n                variable_modified = true;\r\n                console.info(`Set '${path}' to '${newValueParsed}' ${reason_str}`);\r\n                // Call the onVariableUpdated function after updating the variable\r\n                await eventEmit(\r\n                    variable_events.SINGLE_VARIABLE_UPDATED,\r\n                    variables.stat_data,\r\n                    path,\r\n                    oldValue,\r\n                    newValueParsed\r\n                );\r\n            } else {\r\n                // Otherwise, set the new value directly\r\n                const trimmedNewValue = trimQuotesAndBackslashes(newValue);\r\n                const oldValue = _.cloneDeep(currentValue);\r\n                _.set(variables.stat_data, path, trimmedNewValue);\r\n                const reason_str = reason ? `(${reason})` : '';\r\n                const display_str = `${oldValue}->${trimmedNewValue} ${reason_str}`;\r\n                _.set(out_status.stat_data, path, display_str);\r\n                variable_modified = true;\r\n                console.info(`Set '${path}' to '${trimmedNewValue}' ${reason_str}`);\r\n                await eventEmit(\r\n                    variable_events.SINGLE_VARIABLE_UPDATED,\r\n                    variables.stat_data,\r\n                    path,\r\n                    oldValue,\r\n                    trimmedNewValue\r\n                );\r\n            }\r\n        } else {\r\n            const display_str = `undefined Path: ${path}->${newValue} (${reason})`;\r\n            console.error(display_str);\r\n        }\r\n    }\r\n\r\n    variables.display_data = out_status.stat_data;\r\n    await eventEmit(variable_events.VARIABLE_UPDATE_ENDED, variables, out_is_modifed);\r\n    return variable_modified || out_is_modifed;\r\n}\r\n\r\nexport async function handleResponseMessage() {\r\n    const last_message = await getLastMessageId();\r\n    var last_chat_msg_list = await getChatMessages(last_message);\r\n    if (last_chat_msg_list.length > 0) {\r\n        var current_chat_msg = last_chat_msg_list[last_chat_msg_list.length - 1];\r\n        if (current_chat_msg.role != 'assistant') return;\r\n        var content_modified: boolean = false;\r\n        var current_message_content = current_chat_msg.message;\r\n\r\n        //更新变量状态，从最后一条之前的取，local优先级最低\r\n        const variables = await getLastValidVariable(last_message - 1);\r\n        if (!_.has(variables, 'stat_data')) {\r\n            console.error('cannot found stat_data.');\r\n            return;\r\n        }\r\n\r\n        // 使用正则解析 _.set(${path}, ${newvalue});//${reason} 格式的部分，并遍历结果\r\n        var variable_modified: boolean = false;\r\n        variable_modified =\r\n            variable_modified || (await updateVariables(current_message_content, variables));\r\n        if (variable_modified) {\r\n            //更新到当前聊天\r\n            await replaceVariables(variables);\r\n        }\r\n        await setChatMessage({ data: variables }, last_message, { refresh: 'none' });\r\n\r\n        //如果是ai人物，则不插入\r\n        if (!current_message_content.includes('<CharView')) {\r\n            if (!current_message_content.includes('<StatusPlaceHolderImpl/>')) {\r\n                //替换状态为实际的显示内容\r\n                if (current_message_content.includes('<StatusPlaceHolder/>')) {\r\n                    //const display_str = \"```\\n\" + YAML.stringify(out_status.stat_data, 2) + \"```\\n\";\r\n                    //保证在输出完成后，才会渲染。\r\n                    const display_str = '<StatusPlaceHolderImpl/>'; //status_entry.content;\r\n                    //const display_str = \"```\\n\" + vanilla_str + \"```\\n\";\r\n                    current_message_content = current_message_content.replace(\r\n                        '<StatusPlaceHolder/>',\r\n                        display_str\r\n                    );\r\n\r\n                    content_modified = true;\r\n                } else {\r\n                    //如果没有，则固定插入到文本尾部\r\n                    const display_str = '<StatusPlaceHolderImpl/>'; //status_entry.content;\r\n                    current_message_content += '\\n\\n' + display_str;\r\n                    content_modified = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (content_modified) {\r\n            console.info(`Replace content....`);\r\n            await setChatMessage({ message: current_message_content }, last_message, {\r\n                refresh: 'display_and_render_current',\r\n            });\r\n        }\r\n    }\r\n\r\n    //eventRemoveListener(tavern_events.GENERATION_ENDED, hello);\r\n}\r\n","// src/index.ts\nimport { handleResponseMessage } from './function';\nimport { initCheck } from './variable_init';\n\neventOn(tavern_events.GENERATION_ENDED, handleResponseMessage);\neventOn(tavern_events.MESSAGE_SENT, initCheck);\neventOn(tavern_events.GENERATION_STARTED, initCheck);\n\nexport type GameData = {\n    initialized_lorebooks: string[];\n    stat_data: Record<string, any>;\n    display_data: Record<string, any>;\n};\n\nexport const variable_events = {\n    SINGLE_VARIABLE_UPDATED: 'mag_variable_updated',\n    VARIABLE_UPDATE_ENDED: 'mag_variable_update_ended',\n    VARIABLE_UPDATE_STARTED: 'mag_variable_update_started',\n} as const;\n\n// @ts-ignore\nexport type ExtendedListenerType = {\n    [variable_events.SINGLE_VARIABLE_UPDATED]: (\n        stat_data: Record<string, any>,\n        path: string,\n        _oldValue: any,\n        _newValue: any\n    ) => void;\n    [variable_events.VARIABLE_UPDATE_STARTED]: (\n        variables: GameData,\n        out_is_updated: boolean\n    ) => void;\n    [variable_events.VARIABLE_UPDATE_ENDED]: (variables: GameData, out_is_updated: boolean) => void;\n};\n","// 整体游戏数据类型\r\nimport { updateVariables } from './function';\r\nimport { GameData } from './main';\r\n\r\ntype LorebookEntry = {\r\n    content: string;\r\n    comment?: string;\r\n};\r\n\r\nexport async function initCheck() {\r\n    //generation_started 的最新一条是正在生成的那条。\r\n    var last_chat_msg: ChatMessage[] = [];\r\n    try {\r\n        (await getChatMessages(-2, { role: 'assistant' })) as ChatMessage[];\r\n    } catch (e) {\r\n        //在第一行时，必定发生异常。\r\n    }\r\n    if (!last_chat_msg) {\r\n        last_chat_msg = [];\r\n    }\r\n    if (last_chat_msg.length <= 0) {\r\n        var first_msg = await getChatMessages(0);\r\n        if (first_msg && first_msg.length > 0) {\r\n            last_chat_msg = first_msg;\r\n        } else {\r\n            console.error('不存在任何一条消息，退出');\r\n            return;\r\n        }\r\n    }\r\n    var last_msg = last_chat_msg[0];\r\n    //检查最近一条消息的当前swipe\r\n    var variables = last_msg.swipes_data[last_msg.swipe_id] as GameData & Record<string, any>;\r\n    var lorebook_settings = await getLorebookSettings();\r\n    var enabled_lorebook_list = lorebook_settings.selected_global_lorebooks;\r\n    var char_lorebook = await getCurrentCharPrimaryLorebook();\r\n    if (char_lorebook !== null) {\r\n        enabled_lorebook_list.push(char_lorebook);\r\n    }\r\n    if (variables === undefined) {\r\n        variables = { display_data: {}, initialized_lorebooks: [], stat_data: {} };\r\n    }\r\n    if (!_.has(variables, 'initialized_lorebooks')) {\r\n        variables.initialized_lorebooks = [];\r\n    }\r\n    if (!variables.stat_data) {\r\n        variables.stat_data = {};\r\n    }\r\n\r\n    var is_updated = false;\r\n    for (const current_lorebook of enabled_lorebook_list) {\r\n        if (variables.initialized_lorebooks.includes(current_lorebook)) continue;\r\n        variables.initialized_lorebooks.push(current_lorebook);\r\n        var init_entries = (await getLorebookEntries(current_lorebook)) as LorebookEntry[];\r\n\r\n        for (const entry of init_entries) {\r\n            if (entry.comment?.includes('[InitVar]')) {\r\n                try {\r\n                    const jsonData = JSON.parse(entry.content);\r\n                    variables.stat_data = _.merge(variables.stat_data, jsonData);\r\n                } catch (e) {\r\n                    console.error(`Failed to parse JSON from lorebook entry: ${e}`);\r\n                    // @ts-ignore\r\n                    toastr.error(e.message, 'Failed to parse JSON from lorebook entry', {\r\n                        timeOut: 5000,\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        is_updated = true;\r\n    }\r\n    if (!is_updated) {\r\n        return;\r\n    }\r\n\r\n    console.info(`Init chat variables.`);\r\n    await insertOrAssignVariables(variables);\r\n\r\n    for (var i = 0; i < last_msg.swipes.length; i++) {\r\n        var current_swipe_data = _.cloneDeep(variables);\r\n        await updateVariables(last_msg.swipes[i], current_swipe_data);\r\n        await setChatMessage({ data: current_swipe_data }, last_msg.message_id, {\r\n            refresh: 'none',\r\n            swipe_id: i,\r\n        });\r\n    }\r\n\r\n    const expected_settings = {\r\n        /*预期设置*/\r\n        context_percentage: 100,\r\n        recursive: true,\r\n    };\r\n    const settings = await getLorebookSettings();\r\n    if (_.isEqual(_.merge({}, settings, expected_settings), settings)) {\r\n        setLorebookSettings(expected_settings);\r\n    }\r\n}\r\n\r\n//window.initCheck = initCheck;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/main.ts\");\n",""],"names":[],"sourceRoot":""}