{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://ModExample/./src/function.ts","webpack://ModExample/./src/main.ts","webpack://ModExample/./src/variable_init.ts","webpack://ModExample/webpack/bootstrap","webpack://ModExample/webpack/before-startup","webpack://ModExample/webpack/startup","webpack://ModExample/webpack/after-startup"],"sourcesContent":["\n\nimport {variable_events} from \"./main\";\n\nexport function trimQuotesAndBackslashes(str: string): string {\n  // Regular expression to match backslashes and quotes at the beginning and end\n  return str.replace(/^[\\\\\"' ]*(.*?)[\\\\\"' ]*$/, '$1');\n}\n\n// @ts-ignore\nfunction clamp(num: number, min = 0, max = 5) {\n    return Math.min(Math.max(num, min), max);\n}\n\n/**\n * 从大字符串中提取所有 .set(${path}, ${new_value});//${reason} 格式的模式\n * 并解析出每个匹配项的路径、新值和原因部分\n */\ninterface SetCommand {\n    fullMatch: string;\n    path: string;\n    oldValue: string;\n    newValue: string;\n    reason: string;\n}\n\nfunction extractSetCommands(inputText: string): SetCommand[] {\n    const results: SetCommand[] = [];\n\n    // 首先匹配整个 _.set 调用\n    const pattern = /_\\.set\\(([\\s\\S]*?)\\);\\s*(?:\\/\\/(.*?))?(?:\\n|$|\\r)/g;\n\n    let match;\n    while ((match = pattern.exec(inputText)) !== null) {\n        const fullContent = match[0];\n        const paramsString = match[1]; // 括号内的所有内容\n        const comment = match[2] ? match[2].trim() : \"\";\n\n        // 手动解析参数，处理嵌套结构\n        const params = parseParameters(paramsString);\n\n        if (params.length >= 3) {\n            results.push({\n                fullMatch: fullContent,\n                path: trimQuotesAndBackslashes(params[0]),\n                oldValue: trimQuotesAndBackslashes(params[1]),\n                newValue: trimQuotesAndBackslashes(params[2]),\n                reason: comment\n            });\n        }\n    }\n\n    return results;\n}\n\n// 解析参数字符串，处理嵌套结构\nfunction parseParameters(paramsString: string): string[] {\n    const params: string[] = [];\n    let currentParam = '';\n    let inQuote = false;\n    let quoteChar = '';\n    let bracketCount = 0;\n    let braceCount = 0;\n\n    for (let i = 0; i < paramsString.length; i++) {\n        const char = paramsString[i];\n\n        // 处理引号\n        if ((char === '\"' || char === \"'\") && (i === 0 || paramsString[i-1] !== '\\\\')) {\n            if (!inQuote) {\n                inQuote = true;\n                quoteChar = char;\n            } else if (char === quoteChar) {\n                inQuote = false;\n            }\n        }\n\n        // 处理方括号 (数组)\n        if (char === '[') bracketCount++;\n        if (char === ']') bracketCount--;\n\n        // 处理花括号 (对象)\n        if (char === '{') braceCount++;\n        if (char === '}') braceCount--;\n\n        // 处理参数分隔符\n        if (char === ',' && !inQuote && bracketCount === 0 && braceCount === 0) {\n            params.push(currentParam.trim());\n            currentParam = '';\n            continue;\n        }\n\n        currentParam += char;\n    }\n\n    // 添加最后一个参数\n    if (currentParam.trim()) {\n        params.push(currentParam.trim());\n    }\n\n    return params;\n}\n\nexport async function getLastValidVariable(startNum : number): Promise<Record<string, any>>\n{\n    for (;;)\n    {\n        if (startNum < 0)\n            break;\n        var currentMsg = await getChatMessages(startNum);\n        if (currentMsg.length > 0)\n        {\n            var variables = currentMsg[0].swipes_data[currentMsg[0].swipe_id];\n            if (_.has(variables, \"stat_data\")) {\n                return variables;\n            }\n        }\n        --startNum;\n    }\n    return await getVariables();\n}\n\nfunction pathFix(path: string) : string\n{\n    //部分情况下llm会偷懒，那咋办嘛\n    const prefixes = [\"central_control_tower\", \"eco_garden\", \"energy_hub\", \"data_center_zone\"];\n    for (const prefix of prefixes) {\n        if (path.startsWith(prefix)) {\n            return '设施信息.' + path;\n        }\n    }\n    path = path.replace(/\"/g, '');\n    return path;\n}\n\nexport async function updateVariables(current_message_content: string, variables: any) : Promise<boolean> {\n\n    var out_is_modifed = false;\n    await eventEmit(variable_events.VARIABLE_UPDATE_STARTED, variables, out_is_modifed);\n    var out_status: Record<string, any> = _.cloneDeep(variables);\n    var matched_set = extractSetCommands(current_message_content);\n    var variable_modified = false;\n    for (const setCommand of matched_set) {\n        var {path, newValue, reason} = setCommand;\n        path = pathFix(path);\n\n        if (_.has(variables.stat_data, path)) {\n            const currentValue = _.get(variables.stat_data, path);\n            //有时候llm会返回整个数组，处理它\n            if (_.isString(newValue) && newValue.trim().startsWith(\"[\") && newValue.trim().endsWith(\"]\")) {\n                try {\n                    const parsedArray = JSON.parse(newValue);\n                    if (Array.isArray(parsedArray) && parsedArray.length > 0) {\n                        newValue = parsedArray[0];\n                    }\n                } catch (error: any) {\n                    console.error(`Error parsing JSON array for '${path}': ${error.message}`);\n                }\n            }\n            // Check the type of the current value\n            if (typeof currentValue === \"number\") {\n                // If the current value is a number, convert the new value to a number\n                const newValueNumber = Number(newValue);\n                _.set(variables.stat_data, path, newValueNumber);\n                const display_str = `${currentValue}->${newValueNumber} (${reason})`;\n                _.set(out_status.stat_data, path, display_str);\n                variable_modified = true;\n                console.info(`Set '${path}' to '${newValueNumber}' (${reason})`);\n            } else if (Array.isArray(currentValue) && currentValue.length === 2) {\n                // If the current value is of type ValueWithDescription<T>\n                const newValueParsed =\n                    (typeof currentValue[0] === \"number\") ? Number(newValue) : trimQuotesAndBackslashes(newValue);\n                var oldValue = _.cloneDeep(currentValue[0]);\n                currentValue[0] = newValueParsed;\n                _.set(variables.stat_data, path, currentValue);\n                const display_str = `${oldValue}->${newValue}(${reason})`;\n                _.set(out_status.stat_data, path, display_str);\n                variable_modified = true;\n                console.info(`Set '${path}' to '${newValueParsed}' (${reason})`);\n                // Call the onVariableUpdated function after updating the variable\n                await eventEmit(variable_events.SINGLE_VARIABLE_UPDATED, variables.stat_data, path, oldValue, newValueParsed);\n            } else {\n                // Otherwise, set the new value directly\n                const trimmedNewValue = trimQuotesAndBackslashes(newValue);\n                _.set(variables.stat_data, path, trimmedNewValue);\n                const display_str = `${currentValue}->${trimmedNewValue} (${reason})`;\n                _.set(out_status.stat_data, path, display_str);\n                variable_modified = true;\n                console.info(`Set '${path}' to '${trimmedNewValue}' (${reason})`);\n            }\n        } else {\n            const display_str = `undefined Path: ${path}->${newValue} (${reason})`;\n            console.error(display_str);\n        }\n    }\n\n    variables.display_data = out_status.stat_data;\n    await eventEmit(variable_events.VARIABLE_UPDATE_ENDED, variables, out_is_modifed);\n    return variable_modified || out_is_modifed;\n}\n\nexport async function handleResponseMessage() {\n\n\n    const last_message = await getLastMessageId();\n    var last_chat_msg_list = await getChatMessages(last_message);\n    if (last_chat_msg_list.length > 0) {\n        var current_chat_msg = last_chat_msg_list[last_chat_msg_list.length - 1];\n        if (current_chat_msg.role != \"assistant\")\n            return;\n        var content_modified: boolean = false;\n        var current_message_content = current_chat_msg.message;\n\n        //更新变量状态，从最后一条之前的取，local优先级最低\n        const variables = await getLastValidVariable(last_message - 1);\n        if (!_.has(variables, \"stat_data\")) {\n            console.error(\"cannot found stat_data.\");\n            return;\n        }\n\n\n\n\n\n\n// 使用正则解析 _.set(${path}, ${newvalue});//${reason} 格式的部分，并遍历结果\n        var variable_modified: boolean = false;\n        variable_modified = variable_modified || await updateVariables(current_message_content, variables);\n        if (variable_modified) {\n            //更新到当前聊天\n            await replaceVariables(variables);\n        }\n        await setChatMessage({data: variables}, last_message, {refresh: 'none'});\n\n        //如果是ai人物，则不插入\n        if (!current_message_content.includes(\"<CharView\")) {\n            if (!current_message_content.includes(\"<StatusPlaceHolderImpl/>\")) {\n                //替换状态为实际的显示内容\n                if (current_message_content.includes(\"<StatusPlaceHolder/>\")) {\n                    //const display_str = \"```\\n\" + YAML.stringify(out_status.stat_data, 2) + \"```\\n\";\n                    //保证在输出完成后，才会渲染。\n                    const display_str = \"<StatusPlaceHolderImpl/>\";//status_entry.content;\n                    //const display_str = \"```\\n\" + vanilla_str + \"```\\n\";\n                    current_message_content = current_message_content.replace(\"<StatusPlaceHolder/>\", display_str);\n\n                    content_modified = true;\n                } else {\n                    //如果没有，则固定插入到文本尾部\n                    const display_str = \"<StatusPlaceHolderImpl/>\";//status_entry.content;\n                    current_message_content += \"\\n\\n\" + display_str;\n                    content_modified = true;\n                }\n            }\n        }\n\n        if (content_modified)\n        {\n            console.info(`Replace content....`);\n            await setChatMessage({message: current_message_content}, last_message, {refresh: 'display_and_render_current'});\n        }\n    }\n\n    //eventRemoveListener(tavern_events.GENERATION_ENDED, hello);\n}\n\n","// src/index.ts\nimport {handleResponseMessage} from './function';\nimport { initCheck } from './variable_init'\n\neventOn(tavern_events.GENERATION_ENDED, handleResponseMessage);\neventOn(tavern_events.MESSAGE_SENT, initCheck);\neventOn(tavern_events.GENERATION_STARTED, initCheck);\n\nexport type GameData = {\n    initialized_lorebooks: string[];\n    stat_data: Record<string, any>;\n    display_data: Record<string, any>;\n};\n\nexport const variable_events = {\n    SINGLE_VARIABLE_UPDATED: \"mag_variable_updated\",\n    VARIABLE_UPDATE_ENDED: \"mag_variable_update_ended\",\n    VARIABLE_UPDATE_STARTED: \"mag_variable_update_started\"\n} as const;\n\n// @ts-ignore\nexport type ExtendedListenerType = {\n    [variable_events.SINGLE_VARIABLE_UPDATED]: (stat_data: Record<string, any>, path: string, _oldValue: any, _newValue: any) => void,\n    [variable_events.VARIABLE_UPDATE_STARTED]: (variables: GameData, out_is_updated: boolean) => void\n    [variable_events.VARIABLE_UPDATE_ENDED]: (variables: GameData, out_is_updated: boolean) => void\n} ;\n","\r\n// 整体游戏数据类型\r\nimport {updateVariables} from \"./function\";\r\nimport {GameData} from \"./main\";\r\n\r\ntype LorebookEntry = {\r\n    content: string;\r\n    comment?: string;\r\n};\r\n\r\n\r\nexport async function initCheck() {\r\n    //generation_started 的最新一条是正在生成的那条。\r\n    var last_chat_msg :  ChatMessage[] = [];\r\n    try {\r\n        await getChatMessages(-2, {role: 'assistant'}) as ChatMessage[];\r\n    }\r\n    catch (e)\r\n    {\r\n        //在第一行时，必定发生异常。\r\n    }\r\n    if (!last_chat_msg)\r\n    {\r\n        last_chat_msg = [];\r\n    }\r\n    if (last_chat_msg.length <= 0)\r\n    {\r\n        var first_msg = await getChatMessages(0);\r\n        if(first_msg && first_msg.length > 0)\r\n        {\r\n            last_chat_msg = first_msg;\r\n        }\r\n        else {\r\n            console.error(\"不存在任何一条消息，退出\");\r\n            return;\r\n        }\r\n    }\r\n    var last_msg = last_chat_msg[0];\r\n    //检查最近一条消息的当前swipe\r\n    var variables = last_msg.swipes_data[last_msg.swipe_id] as GameData & Record<string, any>;\r\n    var lorebook_settings = await getLorebookSettings();\r\n    var enabled_lorebook_list = lorebook_settings.selected_global_lorebooks;\r\n    var char_lorebook = await getCurrentCharPrimaryLorebook();\r\n    if (char_lorebook !== null)\r\n    {\r\n        enabled_lorebook_list.push(char_lorebook);\r\n    }\r\n    if (variables === undefined)\r\n    {\r\n        variables = {display_data: {}, initialized_lorebooks: [], stat_data: {}};\r\n    }\r\n    if (!_.has(variables, 'initialized_lorebooks'))\r\n    {\r\n        variables.initialized_lorebooks = [];\r\n    }\r\n    if (!variables.stat_data) {\r\n        variables.stat_data = {};\r\n    }\r\n\r\n    var is_updated = false;\r\n    for (const current_lorebook of enabled_lorebook_list)\r\n    {\r\n        if (variables.initialized_lorebooks.includes(current_lorebook))\r\n            continue;\r\n        variables.initialized_lorebooks.push(current_lorebook);\r\n        var init_entries = await getLorebookEntries(current_lorebook) as LorebookEntry[];\r\n\r\n        for (const entry of init_entries) {\r\n            if (entry.comment?.includes('[InitVar]')) {\r\n                try {\r\n                    const jsonData = JSON.parse(entry.content);\r\n                    variables.stat_data = _.merge(variables.stat_data, jsonData);\r\n                } catch (e) {\r\n                    console.error(`Failed to parse JSON from lorebook entry: ${e}`);\r\n                    // @ts-ignore\r\n                    toastr.error(e.message, \"Failed to parse JSON from lorebook entry\", { timeOut: 5000 });\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        is_updated = true;\r\n    }\r\n    if (!is_updated) {\r\n        return;\r\n    }\r\n\r\n\r\n    console.info(`Init chat variables.`);\r\n    await insertOrAssignVariables(variables);\r\n\r\n    for (var i = 0; i < last_msg.swipes.length; i++) {\r\n        var current_swipe_data = _.cloneDeep(variables);\r\n        await updateVariables(last_msg.swipes[i], current_swipe_data);\r\n        await setChatMessage({data: current_swipe_data}, last_msg.message_id, {refresh: 'none', swipe_id: i});\r\n    }\r\n\r\n    const expected_settings = {\r\n        /*预期设置*/\r\n        context_percentage: 100, recursive: true\r\n    };\r\n    const settings = await getLorebookSettings();\r\n    if (_.isEqual(_.merge({}, settings, expected_settings), settings)) {\r\n        setLorebookSettings(expected_settings);\r\n    }\r\n}\r\n\r\n//window.initCheck = initCheck;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/main.ts\");\n",""],"names":[],"sourceRoot":""}